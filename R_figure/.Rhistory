library(readxl)
数据记录 <- read_excel("G:\\D\\微信文件\\WeChat Files\\wxid_lzg5pq4gir5j22\\FileStorage\\File\\2022-08\\数据记录.xlsx")
View(数据记录)
install.packages("tidyverse")
install.packages("haven")
install.packages("devtools")
devtools::install_github("tidyverse")
View(数据记录)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("tidyverse")
writeLines('PATH="${RTOOLS42_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("devtools")
devtools::install_github("tidyverse")
remotes::install_github("tidyverse")
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
abline(h=c(60,80,100,120,140), col="gray")
abline(h=c(60,80,100,120,140), col="gray")
library(readr)
cancer <- read_csv("data/cancer.csv")
View(cancer)
res1 <- table(d.cancer[,'sex']); print(res1)
res1 <- table(d.cancer[,'sex']); print(res1)
View(cancer)
res1 <- table(d.cancer[,'sex']); print(res1)
barplot(res1, main="性别分布",
col=c("brown2", "aquamarine1"))
res1 <- table(d.cancer[,'sex']); print(res1)
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
View(d.cancer)
View(cancer)
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
barplot(res1)
res1 <- table(d.cancer[,'sex']);
print(res1)
barplot(res1)
barplot(res1, main="性别分布",
col=c("brown2", "aquamarine1"))
head(colors(), 6)
getwd()
sqrt(exp(1.0))
exp(1.0) |> log()
print(sin(pi/2))
cat("sin(pi/2)=", sin(pi/2), "\n")
cat("log10(2)=", log10(2), "log10(5)=", log10(5), "\n");
sink("tmpres01.txt", split = TRUE)
print(sin(pi/6))
print(cos(pi/6))
cat("t(10)的双侧0.05分位数（临界值）=", qt(1 - 0.05/2, 10), "\n")
sink()
getpwd（）
getpwd()
pwd()
x1 <- 1:10
x1
marks <- c(3,5,10,5,6)
marks
curve(x^2, -2, 2)
curve(sin(x), 0, 2*pi)
abline(h=0) # abline添加参考线
barplot(c("男生"=10, "女生"=7),
main="男女生人数")
demo("graphics")
q
q
clear
quit()
clear
cls
clc
tax.tab <- read.csv("taxsamp.csv", header = TRUE, as.is = TRUE)
getwd
getwd()
ls
getwd
getwd()
setwd("E:/Script_File/R/R_Learn/start")
ls
ls()
ls()
tax.tab <- read.csv("taxsamp.csv", header = TRUE, as.is = TRUE)
tax.tab <- read.csv("taxsamp.csv", header = TRUE, as.is = TRUE)
library(readr)
tax_tab <- read_csv("E:/Script_File/R/R_Learn/Start/taxsamp.csv")
d.cancer <- readr::read_csv("data/cancer.csv",
locale=locale(encoding="GBK"))
x <- rnorm(30, mean=100, sd=1)
print(round(x,2))
hist(x)
hist(x, col=rainbow(15),
main='正态随机数', xlab='', ylab='频数')
tmp.dens <- density(x)
hist(x, freq=FALSE,
ylim=c(0,max(tmp.dens$y)),
col=rainbow(15),
main='正态随机数',
xlab='', ylab='频数')
lines(tmp.dens, lwd=2, col='blue')
x <- seq(0, 2*pi, length=200)
y1 <- sin(x)
y2 <- cos(x)
matplot(x, cbind(y1, y2), type='1',
lty=1,lwd=2,col = c("red", "blue"),
xlab = "x", ylab="y1,y2")
x <- seq(0, 2*pi, length=200)
y1 <- sin(x)
y2 <- cos(x)
matplot(x, cbind(y1, y2), type='1',
lty=1,lwd=2,col = c("red", "blue"),
xlab = "x", ylab="y1,y2")
x <- seq(0, 2*pi, length=200)
y1 <- sin(x)
y2 <- cos(x)
matplot(x, cbind(y1, y2), type='1',
lty=1,lwd=2,col = c("red", "blue"),
xlab = "x", ylab="")
matplot(x, cbind(y1, y2), type='l',
lty=1,lwd=2,col = c("red", "blue"),
xlab = "x", ylab="")
abline(h=0, col='gray')
x <- seq(0, 2*pi, length=200)
y1 <- sin(x)
y2 <- cos(x)
matplot(x, cbind(y1, y2), type='l',
lty=1,lwd=2,col = c("red", "blue"),
xlab = "x", ylab="y1,y2")
abline(h=0, col='gray')
x <- seq(0, 2*pi, length=200)
y1 <- sin(x)
y2 <- cos(x)
plot(x, y1, type='l', lwd=2, col="red")
lines(x, y2, lwd=2, col="blue")
abline(h=0, col='gray')
legend(0, -0.5, col=c("red", "blue"),
lty=c(1,1), lwd=c(2,2),
legend=c("sin", "cos"))
devtools::install_github("kjhealy/socviz")
devtools::install_github("kjhealy/socviz")
devtools::install_github("kjhealy/socviz")
devtools::install_github("kjhealy/socviz")q
devtools::install_github("kjhealy/socviz")
devtools::install_github("kjhealy/socviz")
library(gapminder)
devtools::install_github("kjhealy/socviz")
library(gapminder)
install.packages("gapminder")
library(gapminder)
head(gapminder, 20)
head(gss_sm, 20)
install.packages("gss_sm")
install.packages("socviz")
install.packages("ggplot2")
head(gss_sm, 20)
head(gss_sm, 20)
getwd()
getwd()
setwd("E:/Script_File/R/R_Learn/ggplot")
library(gapminder)
head(gapminder, 20)
p <- ggplot(data = gapminder,
mapping aes(
library(ggplot2)
p <- ggplot(data = gapminder,
mapping aes(
library(gapminder)
library(ggplot2)
head(gapminder, 20)
p <- ggplot(data = gapminder,
mapping aes(
p <- ggplot(data = gapminder,
mapping = aes(
x = gdpPercap,
y =  lifeExp))
p <- ggplot(data = gapminder,
mapping = aes(
x = gdpPercap,
y =  lifeExp))
p + geom_point()
p + geom_smooth()
p + geom_smooth() + + geom_point()
p + geom_smooth() + geom_point()
p + geom_smooth() + geom_point(method="lm") # 拟合曲线
p + geom_point() +
geom_smooth(method="gam") +
scale_x_log10()
p + geom_point() +
geom_smooth(method="gam") +
scale_x_log10(labels=scales::dollar)
p <- ggplot(data=gapminder,
mapping = aes(
x = gdpPercap,
y = lifeExp,
color = continent))
p + geom_point() +
geom_smooth(method="loess") +
scale_x_log10(labels=scales::dollar)
p <- ggplot(data = gss_sm,
mapping = aes(x = bigregion))
install.packages("socviz")
p <- ggplot(data = gss_sm,
mapping = aes(x = bigregion))
library(socviz)
p <- ggplot(data = gss_sm,
mapping = aes(x = bigregion))
p + geom_bar()
View(数据记录)
View(数据记录)
View(数据记录)
View(数据记录)
library(readxl)
ls()
library(readxl)
data_excel <- read_excel("G:\D\微信文件\WeChat Files\wxid_lzg5pq4gir5j22\FileStorage\File\2022-08\数据记录.xlsx")
library(readxl)
data_excel <- read_excel("G:\\D\\微信文件\\WeChat Files\\wxid_lzg5pq4gir5j22\\FileStorage\\File\\2022-08\\数据记录.xlsx")
View(data_excel)
View(data_excel)
View(data_excel)
View(data_excel)
View(data_excel)
p <- ggplot(data = data_excel,
mapping = aes(
x = "防御n",
y = "ping时间(ms)"))
p + geom_bar()
head(data_excel, 20)
p <- ggplot(data = data_excel,
mapping = aes(
x = 防御n,
y = `ping时间(ms)`))
p + geom_bar()
View(d.cancer)
p <- ggplot(data = data_excel,
mapping = aes(
x = 防御n,
y = `PING时间(ms)`))
p + geom_bar()
p
rlang::last_error()
p + geom_bar()
